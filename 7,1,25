Question 1)https://leetcode.com/problems/maximum-sum-of-distinct-subarrays-with-length-k/submissions/1500969703


Question 2)https://www.geeksforgeeks.org/problems/phone-directory4628/1

class Solution{
public:
    vector<vector<string>> displayContacts(int n, string contact[], string s)
    {
        // code here
        vector<vector<string>> ans;
        set<string> ss;
        vector<string> vs;
        string s1;
        for(int i=0;i<s.length();i++){
            s1+=s[i];
            for(int j=0;j<n;j++){
                if(contact[j].find(s1)!=-1) ss.insert(contact[j]);
            }
            for(auto i:ss) vs.push_back(i);
            if(vs.empty()) ans.push_back({"0"});
            else ans.push_back(vs);
            vs.clear();
            ss.clear();
        }
        return ans;
    }
};
