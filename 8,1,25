Question 1)https://leetcode.com/problems/valid-sudoku/submissions/1502135417

Question 2)https://leetcode.com/problems/first-unique-character-in-a-string/submissions/1502077664

Question 3)https://www.geeksforgeeks.org/problems/maximum-of-all-subarrays-of-size-k3101/1

vector<int> result; // To store the maximums of each window
    deque<int> dq; // Deque to store indices of array elements

    for (int i = 0; i < arr.size(); i++) {
        // Remove indices that are out of the current window
        if (!dq.empty() && dq.front() < i - k + 1) {
            dq.pop_front();
        }

        // Remove indices of smaller elements from the back of the deque
        while (!dq.empty() && arr[dq.back()] < arr[i]) {
            dq.pop_back();
        }

        // Add the current index to the deque
        dq.push_back(i);

        // Add the maximum of the current window to the result
        if (i >= k - 1) {
            result.push_back(arr[dq.front()]);
        }
    }

    return result;

Thank you.
